% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitprop.R
\name{plot.fitprop}
\alias{plot.fitprop}
\title{Plot function for fitprop objects}
\usage{
\method{plot}{fitprop}(
  x,
  ...,
  type = c("ecdf", "euler", "nVennR"),
  whichmod = NULL,
  whichfit = colnames(x$fit_list[[1]]),
  savePlot = FALSE,
  xlim = c(0, 1),
  samereps = TRUE,
  cutoff = NULL,
  lower.tail = NULL,
  mod.lab = NULL,
  mod.brewer.pal = "Set1"
)
}
\arguments{
\item{x}{Object of class fitprop, as created by run.fitprop function.}

\item{...}{Does nothing but to hopefully make this generic function pass R CMD check}

\item{type}{What type of plot to produce? Options include \code{"ecdf"} or \code{"euler"}. \code{"nVennR"}
is not yet operational.}

\item{whichmod}{Index number corresponding to which model(s) to include on the plot. Defaults to all models.}

\item{whichfit}{Character vector indicating which indices of model fit to include. Defaults to all saved indices.}

\item{savePlot}{Logical value indicating whether to save plot to a list (TRUE) or just produce plot to output.}

\item{xlim}{Numeric vector of length 2 indicating the limits for the x-axis of the plot.}

\item{samereps}{Logical value indicating whether to use only results from replications in which all selected models yielded results.}

\item{cutoff}{Numeric vector indicating what cut value of the fit indice(s) to use for euler plots.}

\item{lower.tail}{Logical vector indicating whether lower values of each fit index corresponds to good fit.}

\item{mod.lab}{Optional character vector of labels for each model.}

\item{mod.brewer.pal}{Optional string corresponding to the palette from RColorBrewer to use for the different models. e.g.,
see \code{\link[RColorBrewer]{display.brewer.all}}.}
}
\description{
`plot()` returns a plot (of type ECDF, Euler, or UpSet) for each requested fit index saved in an object of class fitprop.
}
\examples{
\donttest{

# Set up a covariance matrix to fit models to
p<-3 # number of variables
temp_mat <- diag(p) # identity matrix
colnames(temp_mat) <- rownames(temp_mat) <- paste0("V", seq(1, p))

# Define and fit two models using lavaan package
mod1a <- 'V3 ~ V1 + V2
  V1 ~~ 0*V2'
mod2a <- 'V3 ~ V1
  V2 ~ V3'

mod1a.fit <- sem(mod1a, sample.cov=temp_mat, sample.nobs=500)
mod2a.fit <- sem(mod2a, sample.cov=temp_mat, sample.nobs=500)

# Run fit propensity analysis (50 reps to save time)
# Onion approach, save srmr and CFI
res <- run.fitprop(mod1a.fit, mod2a.fit, fit.measure=c("srmr","cfi"),
  rmethod="onion",reps=50)

# Generate a variety of plots
# ecdf - only srmr
plot(res, whichfit = "srmr")

# ecdf - both srmr and cfi, properly indicating that higher values of cfi are better
plot(res, lower.tail=c(TRUE,FALSE))

# Generate Euler plot
plot(res, type = "euler", whichfit = "srmr", cutoff = .08, lower.tail = TRUE)

# Change color palette, save plot to object, then display or change
myplot <- plot(res, type = "euler", whichfit="cfi",
             lower.tail = FALSE,
             cutoff = .95,
             mod.brewer.pal = "Dark2",
             savePlot = TRUE)
myplot[[1]] # saved to the first slot
myplot[[1]] + labs(subtitle = "Two Regression Models") # change something, like add a subtitle


}
}
